name: Pipeline Quét Bảo mật Trivy

# Kích hoạt pipeline khi push vào nhánh main hoặc khi có pull request nhắm đến nhánh main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Scan my-app with Trivy
    runs-on: ubuntu-latest

    steps:
      # Bước 1: Sao chép mã nguồn từ kho lưu trữ
      - name: Sao chép kho lưu trữ
        uses: actions/checkout@v4

      # Bước 2: Thiết lập ngày để đặt tên tệp
      - name: Thiết lập ngày
        id: set-date
        run: echo "DATE=$(date +%m.%d.%Y)" >> $GITHUB_ENV

      # Bước 3: Xây dựng hình ảnh Docker từ Dockerfile
      - name: Xây dựng hình ảnh Docker
        run: |
          docker build -t my-app:${{ env.DATE }} -f Dockerfile .
        env:
          DOCKER_BUILDKIT: 1  # Kích hoạt BuildKit để xây dựng nhanh hơn

      # Bước 4: Tạo thư mục lưu kết quả
      - name: Tạo thư mục lưu kết quả
        run: mkdir -p "GitHub Actions/Trivy Automation"

      # Bước 5: Cài đặt Trivy
      - name: Cài đặt Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin latest

      # Bước 6: Tải cơ sở dữ liệu lỗ hổng của Trivy
      - name: Tải cơ sở dữ liệu lỗ hổng
        run: trivy image --download-db-only

      # Bước 7: Quét hình ảnh Docker với Trivy
      - name: Quét hình ảnh với Trivy
        run: |
          OUTPUT_FILE="GitHub Actions/Trivy Automation/scan-results-${{ env.DATE }}.json"
          # Xóa các file kết quả quét cũ trong thư mục
          rm -rf "GitHub Actions/Trivy Automation"/*.json
          trivy image --format json --ignore-unfixed --vuln-type os,library --severity CRITICAL,HIGH,MEDIUM,LOW -o "$OUTPUT_FILE" my-app:${{ env.DATE }}

      # Bước 8: Kiểm tra tệp kết quả quét
      - name: Kiểm tra tệp kết quả
        run: ls -l "GitHub Actions/Trivy Automation/"

      # Bước 9: Commit kết quả quét vào repository (chỉ chạy khi push)
      - name: Commit kết quả quét vào repository
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add "GitHub Actions/Trivy Automation/scan-results-${{ env.DATE }}.json"
          git commit -m "Thêm kết quả quét Trivy (${{ env.DATE }})" || echo "Không có thay đổi để commit"
          git push origin HEAD:trivy-scan-results