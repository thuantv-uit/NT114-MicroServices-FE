name: Scan Pipeline

# Kích hoạt pipeline khi push vào nhánh main hoặc khi có pull request nhắm đến nhánh main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    name: Xây dựng và Quét Hình ảnh Docker với Trivy
    runs-on: ubuntu-latest

    steps:
      # Bước 1: Sao chép mã nguồn từ kho lưu trữ
      - name: Sao chép kho lưu trữ
        uses: actions/checkout@v4

      # Bước 2: Thiết lập ngày và giờ để đặt tên tệp
      - name: Thiết lập ngày và giờ
        id: set-datetime
        run: echo "DATETIME=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

      # Bước 3: Xây dựng hình ảnh Docker từ Dockerfile
      - name: Xây dựng hình ảnh Docker
        run: |
          docker build -t app:${{ env.DATETIME }} -f Dockerfile .
        env:
          DOCKER_BUILDKIT: 1  # Kích hoạt BuildKit để xây dựng nhanh hơn

      # Bước 4: Tạo thư mục lưu kết quả
      - name: Tạo thư mục lưu kết quả
        run: mkdir -p trivy-results

      # Bước 5: Cài đặt Trivy
      - name: Cài đặt Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin latest

      # Bước 6: Tải cơ sở dữ liệu lỗ hổng của Trivy
      - name: Tải cơ sở dữ liệu lỗ hổng
        run: trivy image --download-db-only

      # Bước 7: Quét hình ảnh Docker với Trivy
      - name: Quét hình ảnh với Trivy
        run: |
          OUTPUT_FILE="trivy-results/scan-results-app-${{ env.DATETIME }}.json"
          trivy image --format json --ignore-unfixed --vuln-type os,library --severity CRITICAL,HIGH,MEDIUM,LOW -o "$OUTPUT_FILE" app:${{ env.DATETIME }}

      # Bước 8: Kiểm tra tệp kết quả quét
      - name: Kiểm tra tệp kết quả quét
        run: |
          OUTPUT_FILE="trivy-results/scan-results-app-${{ env.DATETIME }}.json"
          if [ -f "$OUTPUT_FILE" ]; then
            ls -l trivy-results/
          else
            echo "Lỗi: Tệp kết quả quét không được tìm thấy!"
            exit 1
          fi

      # Bước 9: Lưu kết quả quét dưới dạng artifact
      - name: Lưu kết quả quét dưới dạng artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-results-app-${{ env.DATETIME }}
          path: trivy-results/scan-results-app-${{ env.DATETIME }}.json

  push-results:
    name: Đẩy Kết Quả Quét vào Nhánh trivy-results
    runs-on: ubuntu-latest
    needs: build-and-scan  # Đợi job build-and-scan hoàn thành
    if: github.event_name == 'push'  # Chỉ chạy khi sự kiện là push

    steps:
      # Bước 1: Sao chép mã nguồn từ kho lưu trữ
      - name: Sao chép kho lưu trữ
        uses: actions/checkout@v4

      # Bước 2: Thiết lập ngày và giờ (phải khớp với job build-and-scan)
      - name: Thiết lập ngày và giờ
        id: set-datetime
        run: echo "DATETIME=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

      # Bước 3: Tải artifact từ job build-and-scan
      - name: Tải artifact kết quả quét
        uses: actions/download-artifact@v4
        with:
          path: trivy-results

      # Bước 4: Đẩy kết quả quét vào nhánh trivy-results
      - name: Đẩy kết quả quét vào nhánh trivy-results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin
          git checkout -B trivy-results origin/trivy-results || git checkout -b trivy-results
          mkdir -p trivy-results
          # Di chuyển file kết quả từ thư mục tải về
          ARTIFACT_PATH="trivy-results/trivy-scan-results-app-${{ env.DATETIME }}"
          if [ -d "$ARTIFACT_PATH" ]; then
            mv "$ARTIFACT_PATH/scan-results-app-${{ env.DATETIME }}.json" trivy-results/
          fi
          git add trivy-results/*
          git commit -m "Thêm kết quả quét Trivy mới (${{ env.DATETIME }})" || echo "Không có thay đổi để commit"
          git push origin trivy-results