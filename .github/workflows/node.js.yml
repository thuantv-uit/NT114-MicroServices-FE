name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
      fail-fast: false # Continue testing other versions even if one fails

    steps:
      # Fetch source code from the repository
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for SonarQube to analyze history

      # Set up Node.js environment
      - name: Set Up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Cache npm dependencies to speed up

      # Install dependencies
      - name: Install Dependencies
        run: npm ci # Use npm ci for clean and consistent installation

      # Build the project with detailed logging
      - name: Build Project
        run: npm run build -- --verbose # Enable detailed logging for build
        env:
          NODE_ENV: production # Ensure build in production mode
        continue-on-error: false # Stop if build fails

      # SonarQube Scan
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Run tests with detailed error logging (optional, uncomment if tests are available)
      # - name: Run Tests
      #   run: npm test -- --verbose # Enable detailed logging for tests
      #   env:
      #     NODE_ENV: test
      #   continue-on-error: false

      # Display build error details if failed
      - name: Display Build Error Details
        if: failure() # Run only if previous steps fail
        run: |
          echo "Checking error log files..."
          find . -type f -name "*.log" -exec cat {} \; || echo "No log files found"
          echo "Listing files in build directory (if exists)..."
          ls -la dist/ || echo "Build directory dist/ not found"